Swindle - Working Example Website Registration and User Authentication
a simple working example of a user registration and login webapp using cherrypy and Sqlite.

Requirements:
- python 3
- cherrypy 3.2.2
- PassLib 1.6.1

Instructions:
- Make sure you have the following installed on your system; python 3 (http://www.python.org/download/), cherrypy 3.2.2 (http://download.cherrypy.org/cherrypy/3.2.2/), PassLib 1.6.1 (https://code.google.com/p/passlib/downloads/list)
- Initial empty database file already created.
- Edit lines 22 and 23 in email_pass.py file which is in the backend directory.  You will need to do this so that user email notifications work, see comments in file.
- Run swindle_main.py to start the cherrypy server.
- Open a browser and got to http://localhost:8080/.


Overview:
 - DO NOT DEPLOY in production setting as is, this is NOT SECURED by SSL, this is only a working example, a certificate will be needed to make secure over HTTPS!
 - HTML, CSS and Javascript (Mootools) included.
 - Simple framework: Frontend, Backend, and Data.
 - The framework reflects the directory structure so very little abstraction used to describe and understand functionality.
 - User passwords are 256-bit encrypted before being stored in the database.
 - Temporary passwords are emailed to the registered user, are fully random and expire within 30 minutes.
